<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 <modelVersion>4.0.0</modelVersion>
 <groupId>io.yucca.microsoft</groupId>
 <artifactId>onedrive-sdk</artifactId>
 <version>0.2.0-SNAPSHOT</version>
 <name>OneDrive Java SDK</name>
 <description>Java SDK for the Microsoft OneDrive API</description>

 <properties>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  <commons.configuration.version>1.10</commons.configuration.version>
  <jersey.version>2.21</jersey.version>
  <slf4j.version>1.7.12</slf4j.version>
  <!-- Coverage report locations are equal to SonarQube defaults -->
  <jacoco.it.execution.data.file>${project.build.directory}/jacoco-it.exec</jacoco.it.execution.data.file>
  <jacoco.ut.execution.data.file>${project.build.directory}/jacoco.exec</jacoco.ut.execution.data.file>
  <!-- Setup for integration tests is done as described in: http://antoniogoncalves.org/2012/12/13/lets-turn-integration-tests-with-maven-to-a-first-class-citizen/ -->
  <skipTests>false</skipTests>
  <skipITs>${skipTests}</skipITs>
  <skipUTs>${skipTests}</skipUTs>
 </properties>

 <build>
  <plugins>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.3</version>
    <configuration>
     <source>1.7</source>
     <target>1.7</target>
    </configuration>
   </plugin>
   <!-- setup for code coverage of unit and integration tests as described 
    in: http://www.petrikainulainen.net/programming/maven/creating-code-coverage-reports-for-unit-and-integration-tests-with-the-jacoco-maven-plugin/ -->
   <plugin>
    <groupId>org.jacoco</groupId>
    <artifactId>jacoco-maven-plugin</artifactId>
    <version>0.7.4.201502262128</version>
    <executions>
     <!-- Prepares the property pointing to the JaCoCo runtime agent which 
      is passed as VM argument when Maven the Surefire plugin is executed. -->
     <execution>
      <id>pre-unit-test</id>
      <goals>
       <goal>prepare-agent</goal>
      </goals>
      <configuration>
       <!-- Sets the path to the file which contains the execution data. -->
       <destFile>${jacoco.ut.execution.data.file}</destFile>
       <!-- Sets the name of the property containing the settings for JaCoCo 
        runtime agent. -->
       <propertyName>surefireArgLine</propertyName>
      </configuration>
     </execution>
     <!-- Ensures that the code coverage report for unit tests is created 
      after unit tests have been run. -->
     <execution>
      <id>post-unit-test</id>
      <phase>test</phase>
      <goals>
       <goal>report</goal>
      </goals>
      <configuration>
       <!-- Sets the path to the file which contains the execution data. -->
       <dataFile>${jacoco.ut.execution.data.file}</dataFile>
       <!-- Sets the output directory for the code coverage report. -->
       <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
      </configuration>
     </execution>
     <!-- Prepares the property pointing to the JaCoCo runtime agent which 
      is passed as VM argument when Maven the Failsafe plugin is executed. -->
     <execution>
      <id>pre-integration-test</id>
      <phase>pre-integration-test</phase>
      <goals>
       <goal>prepare-agent</goal>
      </goals>
      <configuration>
       <!-- Sets the path to the file which contains the execution data. -->
       <destFile>${jacoco.it.execution.data.file}</destFile>
       <!-- Sets the name of the property containing the settings for JaCoCo 
        runtime agent. -->
       <propertyName>failsafeArgLine</propertyName>
      </configuration>
     </execution>
     <!-- Ensures that the code coverage report for integration tests after 
      integration tests have been run. -->
     <execution>
      <id>post-integration-test</id>
      <phase>post-integration-test</phase>
      <goals>
       <goal>report</goal>
      </goals>
      <configuration>
       <!-- Sets the path to the file which contains the execution data. -->
       <dataFile>${jacoco.it.execution.data.file}</dataFile>
       <!-- Sets the output directory for the code coverage report. -->
       <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
      </configuration>
     </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>2.18.1</version>
    <configuration>
     <!-- Sets the VM argument line used when unit tests are run. -->
     <argLine>${surefireArgLine}</argLine>
     <skipTests>${skipUTs}</skipTests>
     <properties>
      <!-- Needed otherwise "No information about coverage per test. https://jira.sonarsource.com/browse/SONARJAVA-94" -->
      <property>
       <name>listener</name>
       <value>org.sonar.java.jacoco.JUnitListener</value>
      </property>
     </properties>
    </configuration>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-failsafe-plugin</artifactId>
    <version>2.18.1</version>
    <configuration>
     <!-- Sets the VM argument line used when unit tests are run. -->
     <argLine>${failsafeArgLine}</argLine>
     <skipTests>${skipTests}</skipTests>
     <skipITs>${skipITs}</skipITs>
     <properties>
      <!-- Needed otherwise "No information about coverage per test. https://jira.sonarsource.com/browse/SONARJAVA-94" -->
      <property>
       <name>listener</name>
       <value>org.sonar.java.jacoco.JUnitListener</value>
      </property>
     </properties>
     <!-- workaround to have test report for IT in sonar, see http://stackoverflow.com/a/15567782/936729 -->
     <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
    </configuration>
    <executions>
     <execution>
      <goals>
       <goal>integration-test</goal>
       <goal>verify</goal>
      </goals>
     </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-javadoc-plugin</artifactId>
    <version>2.10.3</version>
    <executions>
     <execution>
      <id>attach-javadocs</id>
      <goals>
       <goal>jar</goal>
      </goals>
      <configuration>
       <!-- <additionalparam>-Xdoclint:none</additionalparam> -->
      </configuration>
     </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <version>2.6</version>
    <configuration>
     <archive>
      <manifest>
       <addClasspath>true</addClasspath>
       <mainClass>io.yucca.microsoft.onedrive.ConfigurationBuilder</mainClass>
      </manifest>
     </archive>
    </configuration>
    <executions>
     <execution>
      <goals>
       <goal>test-jar</goal>
      </goals>
     </execution>
    </executions>
   </plugin>
   <!-- copy dependencies to ${project.build.directory}/lib for sonar analysis, 
    not further used -->
   <plugin>
    <artifactId>maven-dependency-plugin</artifactId>
    <executions>
     <execution>
      <phase>package</phase>
      <goals>
       <goal>copy-dependencies</goal>
      </goals>
      <configuration>
       <outputDirectory>${project.build.directory}/lib</outputDirectory>
      </configuration>
     </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-shade-plugin</artifactId>
    <version>2.4.1</version>
    <configuration>
    </configuration>
    <executions>
     <execution>
      <phase>package</phase>
      <goals>
       <goal>shade</goal>
      </goals>
      <configuration>
       <transformers>
        <transformer
         implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
         <mainClass>io.yucca.microsoft.onedrive.ConfigurationBuilder</mainClass>
        </transformer>
       </transformers>
      </configuration>
     </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-release-plugin</artifactId>
    <version>2.5.2</version>
   </plugin>
  </plugins>
 </build>

 <dependencies>
  <dependency>
   <groupId>org.glassfish.jersey.core</groupId>
   <artifactId>jersey-client</artifactId>
   <version>${jersey.version}</version>
  </dependency>

  <dependency>
   <groupId>org.glassfish.jersey.security</groupId>
   <artifactId>oauth2-client</artifactId>
   <version>${jersey.version}</version>
  </dependency>

  <dependency>
   <groupId>org.glassfish.jersey.connectors</groupId>
   <artifactId>jersey-apache-connector</artifactId>
   <version>${jersey.version}</version>
  </dependency>

  <dependency>
   <groupId>org.glassfish.jersey.media</groupId>
   <artifactId>jersey-media-multipart</artifactId>
   <version>${jersey.version}</version>
  </dependency>

  <dependency>
   <groupId>commons-configuration</groupId>
   <artifactId>commons-configuration</artifactId>
   <version>${commons.configuration.version}</version>
  </dependency>

  <dependency>
   <groupId>org.slf4j</groupId>
   <artifactId>slf4j-api</artifactId>
   <version>${slf4j.version}</version>
  </dependency>

  <dependency>
   <groupId>org.slf4j</groupId>
   <artifactId>slf4j-simple</artifactId>
   <version>${slf4j.version}</version>
   <scope>test</scope>
  </dependency>

  <dependency>
   <groupId>junit</groupId>
   <artifactId>junit</artifactId>
   <version>4.12</version>
   <scope>test</scope>
  </dependency>

  <dependency>
   <groupId>org.codehaus.sonar-plugins.java</groupId>
   <artifactId>sonar-jacoco-listeners</artifactId>
   <version>3.2</version>
   <scope>test</scope>
  </dependency>

 </dependencies>

 <scm>
  <connection>scm:git:https://github.com/robses/onedrive-sdk.git</connection>
  <developerConnection>scm:git:git@github.com:robses/onedrive-sdk.git</developerConnection>
  <url>https://github.com/robses/onedrive-sdk</url>
  <tag>HEAD</tag>
 </scm>

 <distributionManagement>
  <snapshotRepository>
   <id>sonatype-nexus-snapshots</id>
   <name>Sonatype Nexus snapshot repository</name>
   <url>https://oss.sonatype.org/content/repositories/snapshots</url>
  </snapshotRepository>
  <repository>
   <id>sonatype-nexus-staging</id>
   <name>Sonatype Nexus release repository</name>
   <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
  </repository>
 </distributionManagement>

 <developers>
  <developer>
   <id>robses</id>
   <name>Rob Sessink</name>
   <url>http://yucca.io</url>
   <email>rob.sessink@yucca.io</email>
   <timezone>+1.0</timezone>
  </developer>
 </developers>
 <url>https://github.com/robses/onedrive-sdk</url>
 <inceptionYear>2015</inceptionYear>

 <licenses>
  <license>
   <name>Apache License 2.0</name>
   <url>http://www.apache.org/licenses/LICENSE-2.0</url>
  </license>
 </licenses>
 <issueManagement>
  <url>https://github.com/robses/onedrive-sdk/issues</url>
 </issueManagement>
</project>
